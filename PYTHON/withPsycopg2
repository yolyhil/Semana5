FUNCION FETCHONE,FUNCION FETCHALL
Insertar,Actualizar,Eliminar( uno o varios registros)

import psycopg2 # esto es para poder contactarnos a postgre
# con este codigo insertamos varios registros
conexion = psycopg2.connect(user='postgres', password="admin", host='127.0.0.1', port='5432', database='test_bd')

try:
    with conexion:
        with conexion.cursor()  as cursor:
            sentencia = 'UPDATE persona SET nombre=%s, apellido=%s, email=%s WHERE id_persona=%s'
            valores =('Juan Carlos', 'Roldan', 'rcarlos@gmail.com', 1)# es una tupla
            cursor.execute(sentencia, valores) # de esta manera ejecutamos la sentencia
            registros_actualizados = cursor.rowcount
            print(f'los registros actualizados son: {registros_actualizados}')
except Exception as e:
    print(f'ocurrio un error:{e}')
finally:
     conexion.close()

     import psycopg2 # esto es para poder contactarnos a postgre
# con este codigo insertamos varios registros
conexion = psycopg2.connect(user='postgres', password="Admin", host='127.0.0.1', port='5432', database='test_bd')

try:
    with conexion:
        with conexion.cursor()  as cursor:
            sentencia = 'UPDATE persona SET nombre=%s, apellido=%s, email=%s WHERE id_persona=%s'
            valores =(('Juan Alberto', 'Roldan', 'jalberto@gmail.com', 4),
                      ('Romina', 'Ayala', 'rayala@gmail.com',5),
                      ('Lucia Belen', 'Arcadia', 'belenlarcadia@gamail,com',8)
                      )# es una tupla de tupla
            cursor.executemany(sentencia, valores) # de esta manera ejecutamos la sentencia
            registros_actualizados = cursor.rowcount
            print(f'los registros actualizados son: {registros_actualizados}')
except Exception as e:
    print(f'ocurrio un error:{e}')
finally:
     conexion.close()

     import psycopg2 # esto es para poder contactarnos a postgre

conexion = psycopg2.connect(user='postgres', password="Admin", host='127.0.0.1', port='5432', database='test_bd')

try:
    with conexion:
        with conexion.cursor() as cursor:
            sentencia = 'DELETE FROM persona WHERE id_persona=%s'
            entrada = input('ingrse el numero de registro a eliminar: ')
            valores = (entrada,)# es unatupla de valores
            cursor.execute(sentencia, valores) # de esta manera ejecutamos la sentencia
            registros_eliminados = cursor.rowcount
            print(f'los registros Eliminados son: {registros_eliminados }')
except Exception as e:
    print(f'ocurrio un error:{e}')
finally:
     conexion.close()
#      # como eliminar varios registros a la vez
#  try:
#     with conexion:
#         with conexion.cursor() as cursor:
#              sentencia = 'DELETE FROM persona WHERE id_persona IN %s'
#              entrada = input('ingrse los numeros de registros a eliminar(separados por coma): ')
#              valores = (tuple(entrada.split(',')),)# es unatupla de valores
#              cursor.execute(sentencia, valores) # de esta manera ejecutamos la sentencia
#              registros_eliminados = cursor.rowcount
#              print(f'los registros Eliminados son: {registros_eliminados }')
#  except Exception as e:
#      print(f'ocurrio un error:{e}')
#  finally:
#      conexion.close()
import psycopg2  # esto es para poder contactarnos a postgres
# con este codigo insertamos varios registros
conexion = psycopg2.connect(user='postgres1', password="Admin", host='127.0.0.1', port='5432', database='test_bd')

try:
    with conexion:
        with conexion.cursor() as cursor:
             sentencia = 'DELETE FROM persona WHERE id_persona IN %s'
             entrada = input('ingrse los numeros de registros a eliminar(separados por coma): ')
             valores = (tuple(entrada.split(',')),)# es unatupla de valores
             cursor.execute(sentencia, valores) # de esta manera ejecutamos la sentencia
             registros_eliminados = cursor.rowcount
             print(f'los registros Eliminados son: {registros_eliminados }')
except Exception as e:
     print(f'ocurrio un error:{e}')
finally:
     conexion.close()

     import psycopg2 # esto es para poder contactarnos a postgre

conexion = psycopg2.connect(user='postgres', password="admin", host='127.0.0.1', port='5432', database='test_bd')

try:
    with conexion:
        with conexion.cursor()  as cursor:
            sentencia = 'INSERT INTO persona (nombre, apellido, email) VALUES(%s, %s, %s)'
            valores = ('Carlos','Lopez','clara@gmail.com') # es una tupla
            cursor.execute(sentencia,valores)# de esta manera ejecutamos la sentencia
            #conexion.commit() esto se utiliza para guardar los cambios en la base de datos
            registros_insertados = cursor.rowcount
            print(f'los registros insertados son: {registros_insertados}')
except Exception as e:
    print(f'ocurrio un error:{e}')
finally:
     conexion.close()


     conexion = psycopg2.connect(
    user='postgres1',
    password="Admin",
    host='127.0.0.1',
    port='5432',
    database='test_bd'
)
##print(conexion) aca recuperamos todos los registros
# try:
#     with conexion:
#         with conexion.cursor()  as cursor:
#             sentencia='SELECT * FROM persona'
#             cursor.execute(sentencia)# de esta manera ejecutamos la sentencia
#             registros = cursor.fetchall()#recupera todos los registros de la sentencia
#             print(registro)
# except Exception as e:
#                 print(f'ocurrio un error:{e}')
# finally:

#conexion.close
# https://www.psycopg.org/docs/usage.html, aca recuperamos los campos que queremos

# try:
 #     with conexion:
#         with conexion.cursor()  as cursor:
#             sentencia='SELECT id_persona, nombre FROM persona'
#             cursor.execute(sentencia)# de esta manera ejecutamos la sentencia
#             registros = cursor.fetchall()#recupera todos los registros de la sentencia
#             print(registros)
# except Exception as e:
#     print(f'ocurrio un error:{e}')
# finally:
#      conexion.close
# con este bloque recuperamos los registros que necesitamos, esto se llama codigo duro
# try:
#     with conexion:
#         with conexion.cursor()  as cursor:
#             sentencia='SELECT * FROM persona WHERE id_persona=1'
#             cursor.execute(sentencia)# de esta manera ejecutamos la sentencia
#             registros = cursor.fetchall()#recupera todos los registros de la sentencia
#             print(registros)
# except Exception as e:
#     print(f'ocurrio un error:{e}')
# finally:
#      conexion.close

# ahora vemos como mostramos registros por parametros, parametro posicional(placeholder)

# try:
#     with conexion:
#         with conexion.cursor()  as cursor:
#             sentencia = 'SELECT * FROM persona WHERE id_persona = %s'
#             id_persona = input("ingrese un numero de registro de id_persona: ")
#             cursor.execute(sentencia, (id_persona,))# de esta manera ejecutamos la sentencia
#             registros = cursor.fetchone()#recupera todos los registros de la sentencia
#             #for registro in registros:
#             print(registros)
# except Exception as e:
#     print(f'ocurrio un error:{e}')
# finally:
#      conexion.close()

# aca realizamos un print con un for muestra todos los registros
# try:
#     with conexion:
#         with conexion.cursor()  as cursor:
#             sentencia = 'SELECT * FROM persona WHERE id_persona IN(1,2)'
#            # id_persona = input("ingrese un numero de registro de id_persona: ")
#             cursor.execute(sentencia) # de esta manera ejecutamos la sentencia
#             registros = cursor.fetchall()#recupera todos los registros de la sentencia
#             for registro in registros:
#                 print(registro)
# except Exception as e:
#     print(f'ocurrio un error:{e}')
# finally:
#      conexion.close()
# aca se va sustituir con codigo duro, debemos pasar una tupla de tupla
try:# codigo mas dinamico
    with conexion:
        with conexion.cursor() as cursor:
            sentencia = 'SELECT * FROM persona WHERE id_persona IN %s '
            entrada = input("ingrese los id_persona,(separados por coma: )")
            llaves_primarias = (tuple(entrada.split(', ')),)
            cursor.execute(sentencia, llaves_primarias)# de esta manera ejecutamos la sentencia
            registros = cursor.fetchall()#recupera todos los registros de la sentencia
            for registro in registros:
                print(registro)
except Exception as e:
    print(f'ocurrio un error:{e}')
finally:
     conexion.close()

     import psycopg2 as bd  # esto es para poder contactarnos a postgre

conexion = bd.connect(
    user='postgres',
    password="Admin",
    port='5432',
    host='127.0.0.1',
    database='test_bd'
)
try:  # codigo mas dinamico
    #  conexion.autocommit = False, esto no deberia estar
    cursor = conexion.cursor()
    sentencia = "INSERT INTO persona(nombre, apellido, email) VALUES (%s, %s, %s)"
    valores = ("Maria", "Esparza", 'maesparza@gmail.com')
    cursor.execute(sentencia, valores)
    conexion.commit()  # hacemos el commit manual
    print('termina la transacciones')
except Exception as e:
    conexion.rollback()
    print(f'ocurrio un error, se hizo un roolback :{e}')
finally:
     conexion.close()
#  https://www.psycopg.org/docs/usage.html se pueden ejecutar
# en una sentencia de transaccion se puede leer una o mas sentencia que
# modifique la base de datos

import psycopg2 as bd  # esto es para poder contactarnos a postgre

conexion = bd.connect(
    user='postgres',
    password="Admin",
    port='5432',
    host='127.0.0.1',
    database='test_bd'
)
try: # codigo mas dinamico
    with conexion:
        with conexion.cursor() as cursor:

            sentencia = "INSERT INTO persona(nombre, apellido, email) VALUES (%s, %s, %s)"
            valores = ("Alex", "Rojas", 'arojas@gmail.com')
            cursor.execute(sentencia, valores)

            sentencia = "UPDATE persona SET nombre =%s, apellido=%s, email=%s WHERE id_persona=%s"
            valores = ('Juan Carlos ', 'Roldan ', 'jcroldan@gmail.com', 1)
            cursor.execute(sentencia, valores)  # con este parrafo lo modificamos
except Exception as e:
    print(f'ocurrio un error, se hizo un roolback :{e}')
finally:
     conexion.close()

print('termina la transacciones')
#  https://www.psycopg.org/docs/usage.html se pueden ejecutar
# en una sentencia de transaccion se puede leer una o mas sentencia que
# modifique la base de datos
import psycopg2 as bd  # esto es para poder contactarnos a postgre

conexion = bd.connect(
    user='postgres',
    password="Admin",
    host='127.0.0.1',
    port='5432',
    database='test_bd'
)
# try:  # codigo mas dinamico
#     conexion.autocommit = False, # inicia la transacciones
#     cursor = conexion.cursor()
#     sentencia = "INSERT INTO persona(nombre, apellido, email) VALUES (%s, %s, %s)"
#     valores = ("Jorge", "Lara", 'claraa@gmail.com')
#     cursor.execute(sentencia, valores)# este parrafo hace la inserccion
#
#     sentencia = "UPDATE persona SET nombre =%s, apellido=%s, email=%s WHERE id_persona=%s"
#     valores = ('Juana', 'Juarez', 'jjuarez@gmail.com', 1)
#     cursor.execute(sentencia, valores)#  con este parrafo lo modificamos
#
#
#     conexion.commit()  # hacemos el commit manual, aca se cierra la transaccion
#     print('termina la transacciones')
# except Exception as e:
#     conexion.rollback()
#     print(f'ocurrio un error, se hizo un roolback :{e}')
# finally:
#      conexion.close()
## en este codigo modificamos la long del apellido


try:  # codigo mas dinamico
    conexion.autocommit = False, # inicia la transacciones
    cursor = conexion.cursor()
    sentencia = "INSERT INTO persona(nombre, apellido, email) VALUES (%s, %s, %s)"
    valores = ("Jorge", "Prollaramayol", 'prollaramayolj@gmail.com')
    cursor.execute(sentencia, valores)# este parrafo hace la inserccion

    sentencia = "UPDATE persona SET nombre =%s, apellido=%s, email=%s WHERE id_persona=%s"
    valores = ('Juana', 'Juarez', 'jjuarez@gmail.com', 1)
    cursor.execute(sentencia, valores)#  con este parrafo lo modificamos


    conexion.commit()  # hacemos el commit manual, aca se cierra la transaccion
    print('termina la transacciones')
except Exception as e:
    conexion.rollback()
    print(f'ocurrio un error, se hizo un roolback :{e}')
finally:
     conexion.close()

     import psycopg2 # esto es para poder contactarnos a postgre
# con este codigo insertamos varios registros
conexion = psycopg2.connect(user='postgres', password="Admin", host='127.0.0.1', port='5432', database='test_bd')

try:
    with conexion:
        with conexion.cursor()  as cursor:
            sentencia = 'INSERT INTO persona (nombre, apellido, email) VALUES(%s, %s, %s)'
            valores =( ('Carlos', 'Lara', 'clara@gmail.com'),
            ('Marcos', 'Canto', 'mcanto@gmail.com'),
            ('Marcelo', 'Cuenca', 'mcuenca@gmail.com')) # es una tupla
            cursor.executemany(sentencia, valores) # de esta manera ejecutamos la sentencia
            #conexion.commit() esto se utiliza para guardar los cambios en la base de datos
            registros_insertados = cursor.rowcount
            print(f'los registros insertados son: {registros_insertados}')
except Exception as e:
    print(f'ocurrio un error:{e}')
finally:
     conexion.close()















